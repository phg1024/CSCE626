**************************************
CSCE 626
Sample parallel sum in MPI and OpenMP
**************************************

List of files
==================

setup_env.sh This file is used to setup the environment to compile and run MPI and
             OpenMP programs on Eos. Make sure you execute the following command
             from your current shell
             $ source <path to setup_env.sh> setup_env.sh
             before you try to compile/run. A good practice is to place the above
             line in your ~/.bashrc

sum_mpi.cpp: MPI implementation for parallel summation. Uses explicit MPI calls to
           compute the sum of integer in parallel.

sum_mpi2.cpp: MPI implementation for parallel summation. Uses MPI_Allreduce call to
            combine the partial sum of integer computed in parallel.

sum_openmp.cpp: OpenMP implementation for parallel summation.

Makefile: File for compilation of the code files and clean up of the executables.

Compiling on Eos
==================
$ gmake

This will generate 3 executable sum_mpi, sum_mpi2 and sum_openmp.

Running Interactively on Eos
============================
The processor limit for running jobs interactively (i.e. directly through the shell)
is 4. Therefore, for interactive test runs (for both MPI and OpenMP programs), please
do not exceed the concurrent use of more that 4 processors.

More information can be found on:
http://sc.tamu.edu/help/eos/login.php

For running programs with larger number of processors, you will need to use the batch
processing system. More information about batch processing can be found at:
http://sc.tamu.edu/help/eos/batch/


Running MPI on Eos
====================

$ mpirun -np 2 sum_mpi 32000 100

This runs "sum_mpi" on 2 mpi processes, each adding 32000 ints. It runs 100 iterations.

$ mpirun -np 4 sum_mpi 32000 100

This runs "sum_mpi" on 4 processes, each adding 32000 ints. It runs 100 iterations.

Similarly,

$ mpirun -np 2 sum_mpi2 32000 100

This runs "sum_mpi2" on 2 processes, each adding 32000 ints. It runs 100 iterations.


Running OpenMP on Eos
=======================
$ OMP_NUM_THREADS=2 ./sum_openmp 32000 100

This runs "sum_openmp" on 2 threads, each adding 32000 ints. It runs 100 iterations.

$ OMP_NUM_THREADS=4 ./sum_openmp 32000 100

This runs "sum_openmp" on 4 threads, each adding 32000 ints. It runs 100 iterations.

To change the number of OpenMP threads, you need to change the value of OMP_NUM_THREADS
variable.


Cleanup
=======
$ gmake clean
